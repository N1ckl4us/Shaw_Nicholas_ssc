# Nichoals shaw
# 11/05/2023
# Pythonversion 3.12.0
# Milestone 2


#################################################################################################################################################
#################################################################################################################################################
#################################################################################################################################################
'''
####### ACADEMIC HONESTY AGREEMENT #######

1. Do not submit code generated by AI. It is easy to detect and results in serious consequences. 

2. Do not use code from assignment solutions found online. If you're considering this, realize you aren't the first student to do so and this 
   is also very easy to detect and results in serious consequences. 

3. If you're stuck, just ask for help from the lab.

4. Instead of spending the time to cheat and try to get away with it, use that time to learn the material.

5. CREATE A COMMENT IN THE NEXT STEP SIGNING YOUR NAME THAT YOU HAVE READ, UNDERSTAND, AND AGREE TO THE AFOREMENTIONED ðŸ‘‡

6. Nicholas J. shae

'''
##################################################################################################################################################
##################################################################################################################################################
##################################################################################################################################################

##################################################################################################################################################
'# Note to instructor. '
''' I understand that some of the code is out of place according to the starter .zip file
 the script should fuction as intened upon running it. If you have any advice on how i can organize it better it would be greatly apreciated.'''
##################################################################################################################################################

###### Import the random Module #####
import random
import time 
###### Here are your list of Pirates #####
pirates = [
    'Captain Randell Red-Lord',
    'Jacob Cutter',
    'Pearl Bailey',
    'One-Tooth John',
    'Blackbeard',
    'Captain Rattlebones',
    'Martha One-Eyed',
    'Admiral Hawk',
    'Handsome Jimmy',
    'Calico Jack Rackham'
]

#####  Attacks List #####
attack = ['evade', 'deflect', 'slash']

##### Choosing the Characters for the fight #####
player = random.choice(pirates)
opponent = random.choice(pirates)
pattack = random.choice(attack)
oattack = random.choice(attack)
##### Announce Game Start #####
print("Ahoy ye swabs! Prepare for battle!")
print(f"{player} has challenged {opponent} in one on one combat!")
time.sleep(2)

##### Initialize Scoring Variables ##### 
pscore = 0
oscore = 0
gameover = False
gameon = True
# Create a loop that will run UNTIL either the player or opponent scores at least 4 points
# Write your code below this row ðŸ‘‡
while True:
    pattack = random.choice(attack)
    oattack = random.choice(attack)

    print(f'{player} attacks with {pattack}, while {opponent} attacks with {oattack}')
    time.sleep(2)
# Create a conditional to determine if the player or opponent that will stop the loop if either reached a score of 4.
# Write your code below this row ðŸ‘‡
    if pattack == oattack :
        result =  print("Both pirates execute the same manevour, and the moves cancel each other out.")
        print(pscore, + oscore)
    elif pattack == 'evade' and oattack == 'deflect' :
        pscore += 1
        result = print(F"{player} evades {opponent} attemp to deflect an attack giving {player} an advantage.")
        print(pscore, + oscore)
    elif oattack == 'evade' and pattack == 'deflect' :
        oscore += 1
        result = print(F"{opponent} evades {player} attemp to deflect an attack giving {opponent} an advantage.")
        print(pscore, + oscore)
    elif pattack == 'deflect' and oattack == 'slash' :
        pscore += 1
        result = print(F"{player} deflects the slash from {opponent} giving {player} an advantage.")
        print(pscore, + oscore)
    elif oattack == 'deflect' and pattack == 'slash' :
        oscore += 1
        print(pscore, + oscore)
        result = print(F"{opponent} deflects the slash from {player} giving {opponent} an advantage.")
    elif pattack == 'slash' and oattack == 'evade' : 
        pscore += 1
        result = print(F"{player} swings his sword and slashes at {opponent} who attempts to evade, but fails and gets cut giving {player} an advantage.")
        print(pscore, + oscore)
    elif oattack == 'slash' and pattack == 'evade' : 
        oscore += 1
        result = print(F"{opponent} swings his sword and slashes at {player} who attempts to evade, but fails and gets cut giving {opponent} an advantage.")
        print(oscore)
    if pscore == 4 :
        result = gameover 
        break
    if oscore == 4 :
        result = gameover 
        break

    

# This code needs to be nested inside your loop ðŸ‘‡
# THINK: Recall that any code nested inside a loop will run each time the loop executes
##### Choosing the attack #####
pattack = random.choice(attack)
oattack = random.choice(attack)

print(f'{player} attacks with {pattack}, while {opponent} attacks with {oattack}')


# Create a scoring system to record 1 point for each 'win' scored by either the player or the opponent
# HINT: You will need to use conditionals to compare the attacks
# HINT: You will need to update the score variables 
# Write your code below this row ðŸ‘‡
pscore += 1
oscore += 1
# Create a conditional outside of the loop to print the winner's name.
# Write your code below this row ðŸ‘‡
if pscore == 4 :
    result = print(F"After a hard fought battle {player} has emerged victorious.")
elif oscore == 4 :
    result = print(F"After a hard fought battle {opponent} has emerged victorious.")